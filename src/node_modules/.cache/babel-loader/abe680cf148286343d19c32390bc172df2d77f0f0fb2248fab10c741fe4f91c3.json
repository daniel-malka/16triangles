{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CODE\\\\ART\\\\daniel\\\\16TRI\\\\github\\\\16triangles\\\\src\\\\components\\\\circles\\\\Circles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sketch = () => {\n  _s();\n  const [itter, setItter] = useState(0);\n  const [circles, setCircles] = useState([]);\n  const minRadius = 5;\n  const maxRadius = 300;\n  const totalCircles = 2000;\n  const createCircleAttempts = 500;\n  const widthX = 500;\n  const heightY = 500;\n  const canvasRef = useRef(null);\n  const doesCircleHaveACollision = circle => {\n    for (let i = 0; i < circles.length; i++) {\n      let otherCircle = circles[i];\n      let a = circle.radius + otherCircle.radius / 4 * 1.976;\n      let x = circle.x - otherCircle.x;\n      let y = circle.y - otherCircle.y;\n      if (a >= Math.sqrt(x * x + y * y)) {\n        return true;\n      }\n    }\n    if (circle.x + circle.radius >= widthX - 15 || circle.x - circle.radius <= 0) {\n      return true;\n    }\n    if (circle.y + circle.radius >= heightY - 15 || circle.y - circle.radius <= 0) {\n      return true;\n    }\n    return false;\n  };\n  useEffect(() => {\n    const createAndDrawCircle = () => {\n      let newCircle;\n      let circleSafeToDraw = false;\n      for (let tries = 0; tries < createCircleAttempts; tries++) {\n        newCircle = {\n          x: Math.random() * (widthX - 30) + 15,\n          y: Math.random() * (heightY - 30) + 15,\n          radius: minRadius\n        };\n        if (doesCircleHaveACollision(newCircle)) {\n          continue;\n        } else {\n          circleSafeToDraw = true;\n          break;\n        }\n      }\n      if (!circleSafeToDraw) {\n        return;\n      }\n      for (let radiusSize = minRadius; radiusSize <= maxRadius; radiusSize++) {\n        newCircle.radius = radiusSize;\n        if (doesCircleHaveACollision(newCircle)) {\n          newCircle.radius--;\n          break;\n        }\n      }\n      setCircles(prevCircles => [...prevCircles, newCircle]);\n    };\n    const handleMousePress = () => {\n      setCircles([]);\n      setItter(prevItter => prevItter + 1);\n    };\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.translate(widthX / 2, heightY / 2);\n    const drawCircle = circle => {\n      ctx.beginPath();\n      ctx.arc(circle.x, circle.y, circle.radius, 0, 2 * Math.PI);\n      ctx.fill();\n      ctx.stroke();\n      ctx.closePath();\n    };\n    const drawBackground = () => {\n      ctx.fillStyle = '#000000';\n      ctx.fillRect(-widthX / 2, -heightY / 2, widthX, heightY);\n    };\n    const drawText = () => {\n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = '45px sans-serif';\n      ctx.textAlign = 'center';\n      ctx.fillText('Click here', 0, 0);\n    };\n    const draw = () => {\n      drawBackground();\n      drawText();\n      for (let i = 0; i < totalCircles; i++) {\n        drawCircle(circles[i]);\n      }\n    };\n    canvas.addEventListener('mousedown', handleMousePress);\n    const interval = setInterval(() => {\n      drawBackground();\n      drawText();\n      for (let i = 0; i < totalCircles; i++) {\n        drawCircle(circles[i]);\n      }\n      createAndDrawCircle();\n    }, 100);\n    return () => {\n      clearInterval(interval);\n      canvas.removeEventListener('mousedown', handleMousePress);\n    };\n  }, [itter, circles]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: widthX,\n    height: heightY\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 10\n  }, this);\n};\n_s(Sketch, \"WdocyADIMQA3Kfpq4gHAzE1HrDo=\");\n_c = Sketch;\nexport default Sketch;\nvar _c;\n$RefreshReg$(_c, \"Sketch\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Sketch","_s","itter","setItter","circles","setCircles","minRadius","maxRadius","totalCircles","createCircleAttempts","widthX","heightY","canvasRef","doesCircleHaveACollision","circle","i","length","otherCircle","a","radius","x","y","Math","sqrt","createAndDrawCircle","newCircle","circleSafeToDraw","tries","random","radiusSize","prevCircles","handleMousePress","prevItter","canvas","current","ctx","getContext","translate","drawCircle","beginPath","arc","PI","fill","stroke","closePath","drawBackground","fillStyle","fillRect","drawText","font","textAlign","fillText","draw","addEventListener","interval","setInterval","clearInterval","removeEventListener","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/components/circles/Circles.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\n\r\nconst Sketch = () => {\r\n  const [itter, setItter] = useState(0);\r\n  const [circles, setCircles] = useState([]);\r\n  const minRadius = 5;\r\n  const maxRadius = 300;\r\n  const totalCircles = 2000;\r\n  const createCircleAttempts = 500;\r\n  const widthX = 500;\r\n  const heightY = 500;\r\n  const canvasRef = useRef(null);\r\n  const doesCircleHaveACollision = (circle) => {\r\n    for (let i = 0; i < circles.length; i++) {\r\n      let otherCircle = circles[i];\r\n      let a = circle.radius + (otherCircle.radius / 4) * 1.976;\r\n      let x = circle.x - otherCircle.x;\r\n      let y = circle.y - otherCircle.y;\r\n\r\n      if (a >= Math.sqrt(x * x + y * y)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (circle.x + circle.radius >= widthX - 15 || circle.x - circle.radius <= 0) {\r\n      return true;\r\n    }\r\n\r\n    if (circle.y + circle.radius >= heightY - 15 || circle.y - circle.radius <= 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const createAndDrawCircle = () => {\r\n      let newCircle;\r\n      let circleSafeToDraw = false;\r\n\r\n      for (let tries = 0; tries < createCircleAttempts; tries++) {\r\n        newCircle = {\r\n          x: Math.random() * (widthX - 30) + 15,\r\n          y: Math.random() * (heightY - 30) + 15,\r\n          radius: minRadius,\r\n        };\r\n\r\n        if (doesCircleHaveACollision(newCircle)) {\r\n          continue;\r\n        } else {\r\n          circleSafeToDraw = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!circleSafeToDraw) {\r\n        return;\r\n      }\r\n\r\n      for (let radiusSize = minRadius; radiusSize <= maxRadius; radiusSize++) {\r\n        newCircle.radius = radiusSize;\r\n        if (doesCircleHaveACollision(newCircle)) {\r\n          newCircle.radius--;\r\n          break;\r\n        }\r\n      }\r\n\r\n      setCircles((prevCircles) => [...prevCircles, newCircle]);\r\n    };\r\n\r\n    const handleMousePress = () => {\r\n      setCircles([]);\r\n      setItter((prevItter) => prevItter + 1);\r\n    };\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.translate(widthX / 2, heightY / 2);\r\n\r\n    const drawCircle = (circle) => {\r\n      ctx.beginPath();\r\n      ctx.arc(circle.x, circle.y, circle.radius, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n      ctx.stroke();\r\n      ctx.closePath();\r\n    };\r\n\r\n    const drawBackground = () => {\r\n      ctx.fillStyle = '#000000';\r\n      ctx.fillRect(-widthX / 2, -heightY / 2, widthX, heightY);\r\n    };\r\n\r\n    const drawText = () => {\r\n      ctx.fillStyle = '#FFFFFF';\r\n      ctx.font = '45px sans-serif';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText('Click here', 0, 0);\r\n    };\r\n\r\n    const draw = () => {\r\n      drawBackground();\r\n      drawText();\r\n\r\n      for (let i = 0; i < totalCircles; i++) {\r\n        drawCircle(circles[i]);\r\n      }\r\n    };\r\n\r\n    canvas.addEventListener('mousedown', handleMousePress);\r\n\r\n    const interval = setInterval(() => {\r\n      drawBackground();\r\n      drawText();\r\n\r\n      for (let i = 0; i < totalCircles; i++) {\r\n        drawCircle(circles[i]);\r\n      }\r\n\r\n      createAndDrawCircle();\r\n    }, 100);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      canvas.removeEventListener('mousedown', handleMousePress);\r\n    };\r\n  }, [itter, circles]);\r\n\r\n  return <canvas ref={canvasRef} width={widthX} height={heightY} />;\r\n};\r\n\r\nexport default Sketch;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMU,SAAS,GAAG,CAAC;EACnB,MAAMC,SAAS,GAAG,GAAG;EACrB,MAAMC,YAAY,GAAG,IAAI;EACzB,MAAMC,oBAAoB,GAAG,GAAG;EAChC,MAAMC,MAAM,GAAG,GAAG;EAClB,MAAMC,OAAO,GAAG,GAAG;EACnB,MAAMC,SAAS,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMgB,wBAAwB,GAAIC,MAAM,IAAK;IAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,OAAO,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;MACvC,IAAIE,WAAW,GAAGb,OAAO,CAACW,CAAC,CAAC;MAC5B,IAAIG,CAAC,GAAGJ,MAAM,CAACK,MAAM,GAAIF,WAAW,CAACE,MAAM,GAAG,CAAC,GAAI,KAAK;MACxD,IAAIC,CAAC,GAAGN,MAAM,CAACM,CAAC,GAAGH,WAAW,CAACG,CAAC;MAChC,IAAIC,CAAC,GAAGP,MAAM,CAACO,CAAC,GAAGJ,WAAW,CAACI,CAAC;MAEhC,IAAIH,CAAC,IAAII,IAAI,CAACC,IAAI,CAACH,CAAC,GAAGA,CAAC,GAAGC,CAAC,GAAGA,CAAC,CAAC,EAAE;QACjC,OAAO,IAAI;MACb;IACF;IAEA,IAAIP,MAAM,CAACM,CAAC,GAAGN,MAAM,CAACK,MAAM,IAAIT,MAAM,GAAG,EAAE,IAAII,MAAM,CAACM,CAAC,GAAGN,MAAM,CAACK,MAAM,IAAI,CAAC,EAAE;MAC5E,OAAO,IAAI;IACb;IAEA,IAAIL,MAAM,CAACO,CAAC,GAAGP,MAAM,CAACK,MAAM,IAAIR,OAAO,GAAG,EAAE,IAAIG,MAAM,CAACO,CAAC,GAAGP,MAAM,CAACK,MAAM,IAAI,CAAC,EAAE;MAC7E,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd,MAAM6B,mBAAmB,GAAGA,CAAA,KAAM;MAChC,IAAIC,SAAS;MACb,IAAIC,gBAAgB,GAAG,KAAK;MAE5B,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGlB,oBAAoB,EAAEkB,KAAK,EAAE,EAAE;QACzDF,SAAS,GAAG;UACVL,CAAC,EAAEE,IAAI,CAACM,MAAM,CAAC,CAAC,IAAIlB,MAAM,GAAG,EAAE,CAAC,GAAG,EAAE;UACrCW,CAAC,EAAEC,IAAI,CAACM,MAAM,CAAC,CAAC,IAAIjB,OAAO,GAAG,EAAE,CAAC,GAAG,EAAE;UACtCQ,MAAM,EAAEb;QACV,CAAC;QAED,IAAIO,wBAAwB,CAACY,SAAS,CAAC,EAAE;UACvC;QACF,CAAC,MAAM;UACLC,gBAAgB,GAAG,IAAI;UACvB;QACF;MACF;MAEA,IAAI,CAACA,gBAAgB,EAAE;QACrB;MACF;MAEA,KAAK,IAAIG,UAAU,GAAGvB,SAAS,EAAEuB,UAAU,IAAItB,SAAS,EAAEsB,UAAU,EAAE,EAAE;QACtEJ,SAAS,CAACN,MAAM,GAAGU,UAAU;QAC7B,IAAIhB,wBAAwB,CAACY,SAAS,CAAC,EAAE;UACvCA,SAAS,CAACN,MAAM,EAAE;UAClB;QACF;MACF;MAEAd,UAAU,CAAEyB,WAAW,IAAK,CAAC,GAAGA,WAAW,EAAEL,SAAS,CAAC,CAAC;IAC1D,CAAC;IAED,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;MAC7B1B,UAAU,CAAC,EAAE,CAAC;MACdF,QAAQ,CAAE6B,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACxC,CAAC;IAED,MAAMC,MAAM,GAAGrB,SAAS,CAACsB,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAACE,SAAS,CAAC3B,MAAM,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,CAAC;IAEtC,MAAM2B,UAAU,GAAIxB,MAAM,IAAK;MAC7BqB,GAAG,CAACI,SAAS,CAAC,CAAC;MACfJ,GAAG,CAACK,GAAG,CAAC1B,MAAM,CAACM,CAAC,EAAEN,MAAM,CAACO,CAAC,EAAEP,MAAM,CAACK,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGG,IAAI,CAACmB,EAAE,CAAC;MAC1DN,GAAG,CAACO,IAAI,CAAC,CAAC;MACVP,GAAG,CAACQ,MAAM,CAAC,CAAC;MACZR,GAAG,CAACS,SAAS,CAAC,CAAC;IACjB,CAAC;IAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;MAC3BV,GAAG,CAACW,SAAS,GAAG,SAAS;MACzBX,GAAG,CAACY,QAAQ,CAAC,CAACrC,MAAM,GAAG,CAAC,EAAE,CAACC,OAAO,GAAG,CAAC,EAAED,MAAM,EAAEC,OAAO,CAAC;IAC1D,CAAC;IAED,MAAMqC,QAAQ,GAAGA,CAAA,KAAM;MACrBb,GAAG,CAACW,SAAS,GAAG,SAAS;MACzBX,GAAG,CAACc,IAAI,GAAG,iBAAiB;MAC5Bd,GAAG,CAACe,SAAS,GAAG,QAAQ;MACxBf,GAAG,CAACgB,QAAQ,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;IAClC,CAAC;IAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;MACjBP,cAAc,CAAC,CAAC;MAChBG,QAAQ,CAAC,CAAC;MAEV,KAAK,IAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,YAAY,EAAEO,CAAC,EAAE,EAAE;QACrCuB,UAAU,CAAClC,OAAO,CAACW,CAAC,CAAC,CAAC;MACxB;IACF,CAAC;IAEDkB,MAAM,CAACoB,gBAAgB,CAAC,WAAW,EAAEtB,gBAAgB,CAAC;IAEtD,MAAMuB,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCV,cAAc,CAAC,CAAC;MAChBG,QAAQ,CAAC,CAAC;MAEV,KAAK,IAAIjC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,YAAY,EAAEO,CAAC,EAAE,EAAE;QACrCuB,UAAU,CAAClC,OAAO,CAACW,CAAC,CAAC,CAAC;MACxB;MAEAS,mBAAmB,CAAC,CAAC;IACvB,CAAC,EAAE,GAAG,CAAC;IAEP,OAAO,MAAM;MACXgC,aAAa,CAACF,QAAQ,CAAC;MACvBrB,MAAM,CAACwB,mBAAmB,CAAC,WAAW,EAAE1B,gBAAgB,CAAC;IAC3D,CAAC;EACH,CAAC,EAAE,CAAC7B,KAAK,EAAEE,OAAO,CAAC,CAAC;EAEpB,oBAAOL,OAAA;IAAQ2D,GAAG,EAAE9C,SAAU;IAAC+C,KAAK,EAAEjD,MAAO;IAACkD,MAAM,EAAEjD;EAAQ;IAAAkD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnE,CAAC;AAAC/D,EAAA,CA9HID,MAAM;AAAAiE,EAAA,GAANjE,MAAM;AAgIZ,eAAeA,MAAM;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
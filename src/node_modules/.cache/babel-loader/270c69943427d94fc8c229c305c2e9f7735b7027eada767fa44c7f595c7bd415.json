{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CODE\\\\ART\\\\daniel\\\\16TRI\\\\github\\\\16triangles\\\\src\\\\components\\\\circles\\\\Circles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport generateUniqueRandomNumbers from '../../utilities/functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Circles = _ref => {\n  _s();\n  let {\n    size,\n    screen,\n    canvasRef,\n    isClicked,\n    bgColors,\n    bgSize,\n    strokeColor,\n    fillColor,\n    strokeWidth\n  } = _ref;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const numColors = bgColors.length;\n    let numbers2 = generateUniqueRandomNumbers(0, 1, 2);\n    let numbers3 = generateUniqueRandomNumbers(0, 2, 3);\n    let numbers4 = generateUniqueRandomNumbers(0, 3, 4);\n    let coin = Math.random();\n    const minRadius = 2;\n    canvas.width = screen > 1440 ? 800 : bgSize;\n    canvas.height = screen > 1440 ? 800 : bgSize;\n    const drawCircles = () => {\n      const totalCircles = 3000;\n      let createCircleAttempts = 2000;\n      const widthX = canvas.width;\n      const circles = [];\n\n      // ...\n\n      const createCircle = () => {\n        const x = Math.random() * widthX;\n        const y = Math.random() * widthX;\n        let radius = Math.random() * (widthX / 3 - minRadius);\n        radius = Math.abs(radius); // Ensure radius is positive\n\n        const newCircle = {\n          x,\n          y,\n          radius\n        };\n        if (doesCircleHaveACollision(newCircle)) {\n          if (createCircleAttempts > 0) {\n            createCircleAttempts--;\n            createCircle();\n          }\n          return;\n        }\n        circles.push(newCircle);\n      };\n\n      // ...\n    };\n\n    drawCircles();\n  }, [isClicked]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n_s(Circles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Circles;\nexport default Circles;\nvar _c;\n$RefreshReg$(_c, \"Circles\");","map":{"version":3,"names":["React","useEffect","generateUniqueRandomNumbers","jsxDEV","_jsxDEV","Circles","_ref","_s","size","screen","canvasRef","isClicked","bgColors","bgSize","strokeColor","fillColor","strokeWidth","canvas","current","ctx","getContext","numColors","length","numbers2","numbers3","numbers4","coin","Math","random","minRadius","width","height","drawCircles","totalCircles","createCircleAttempts","widthX","circles","createCircle","x","y","radius","abs","newCircle","doesCircleHaveACollision","push","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/components/circles/Circles.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport generateUniqueRandomNumbers from '../../utilities/functions';\r\n\r\nconst Circles = ({ size, screen, canvasRef, isClicked, bgColors, bgSize, strokeColor, fillColor, strokeWidth }) => {\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const numColors = bgColors.length;\r\n\r\n    let numbers2 = generateUniqueRandomNumbers(0, 1, 2);\r\n    let numbers3 = generateUniqueRandomNumbers(0, 2, 3);\r\n    let numbers4 = generateUniqueRandomNumbers(0, 3, 4);\r\n    let coin = Math.random();\r\n    const minRadius = 2;\r\n\r\n    canvas.width = screen > 1440 ? 800 : bgSize;\r\n    canvas.height = screen > 1440 ? 800 : bgSize;\r\n    const drawCircles = () => {\r\n      const totalCircles = 3000;\r\n      let createCircleAttempts = 2000;\r\n      const widthX = canvas.width;\r\n      const circles = [];\r\n\r\n      // ...\r\n\r\n      const createCircle = () => {\r\n        const x = Math.random() * widthX;\r\n        const y = Math.random() * widthX;\r\n        let radius = Math.random() * (widthX / 3 - minRadius);\r\n        radius = Math.abs(radius); // Ensure radius is positive\r\n\r\n        const newCircle = { x, y, radius };\r\n\r\n        if (doesCircleHaveACollision(newCircle)) {\r\n          if (createCircleAttempts > 0) {\r\n            createCircleAttempts--;\r\n            createCircle();\r\n          }\r\n          return;\r\n        }\r\n\r\n        circles.push(newCircle);\r\n      };\r\n\r\n      // ...\r\n    };\r\n\r\n    drawCircles();\r\n  }, [isClicked]);\r\n\r\n  return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Circles;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,2BAA2B,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,OAAO,GAAGC,IAAA,IAAmG;EAAAC,EAAA;EAAA,IAAlG;IAAEC,IAAI;IAAEC,MAAM;IAAEC,SAAS;IAAEC,SAAS;IAAEC,QAAQ;IAAEC,MAAM;IAAEC,WAAW;IAAEC,SAAS;IAAEC;EAAY,CAAC,GAAAV,IAAA;EAC5GL,SAAS,CAAC,MAAM;IACd,MAAMgB,MAAM,GAAGP,SAAS,CAACQ,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,SAAS,GAAGT,QAAQ,CAACU,MAAM;IAEjC,IAAIC,QAAQ,GAAGrB,2BAA2B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,IAAIsB,QAAQ,GAAGtB,2BAA2B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,IAAIuB,QAAQ,GAAGvB,2BAA2B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IACnD,IAAIwB,IAAI,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC;IACxB,MAAMC,SAAS,GAAG,CAAC;IAEnBZ,MAAM,CAACa,KAAK,GAAGrB,MAAM,GAAG,IAAI,GAAG,GAAG,GAAGI,MAAM;IAC3CI,MAAM,CAACc,MAAM,GAAGtB,MAAM,GAAG,IAAI,GAAG,GAAG,GAAGI,MAAM;IAC5C,MAAMmB,WAAW,GAAGA,CAAA,KAAM;MACxB,MAAMC,YAAY,GAAG,IAAI;MACzB,IAAIC,oBAAoB,GAAG,IAAI;MAC/B,MAAMC,MAAM,GAAGlB,MAAM,CAACa,KAAK;MAC3B,MAAMM,OAAO,GAAG,EAAE;;MAElB;;MAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;QACzB,MAAMC,CAAC,GAAGX,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGO,MAAM;QAChC,MAAMI,CAAC,GAAGZ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGO,MAAM;QAChC,IAAIK,MAAM,GAAGb,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIO,MAAM,GAAG,CAAC,GAAGN,SAAS,CAAC;QACrDW,MAAM,GAAGb,IAAI,CAACc,GAAG,CAACD,MAAM,CAAC,CAAC,CAAC;;QAE3B,MAAME,SAAS,GAAG;UAAEJ,CAAC;UAAEC,CAAC;UAAEC;QAAO,CAAC;QAElC,IAAIG,wBAAwB,CAACD,SAAS,CAAC,EAAE;UACvC,IAAIR,oBAAoB,GAAG,CAAC,EAAE;YAC5BA,oBAAoB,EAAE;YACtBG,YAAY,CAAC,CAAC;UAChB;UACA;QACF;QAEAD,OAAO,CAACQ,IAAI,CAACF,SAAS,CAAC;MACzB,CAAC;;MAED;IACF,CAAC;;IAEDV,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACrB,SAAS,CAAC,CAAC;EAEf,oBAAOP,OAAA;IAAQyC,GAAG,EAAEnC;EAAU;IAAAoC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC,CAAC;AAAC1C,EAAA,CAhDIF,OAAO;AAAA6C,EAAA,GAAP7C,OAAO;AAkDb,eAAeA,OAAO;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
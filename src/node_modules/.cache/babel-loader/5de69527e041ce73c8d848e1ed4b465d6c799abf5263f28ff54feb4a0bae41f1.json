{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CODE\\\\ART\\\\daniel\\\\16TRI\\\\github\\\\16triangles\\\\src\\\\components\\\\circles\\\\Circles.js\";\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst canvasRef = useRef(null);\nconst Circles = _ref => {\n  let {\n    size\n  } = _ref;\n  console.log(size);\n  let itter = 0;\n  let circles = [];\n  const minRadius = 5;\n  const canvas = canvasRef.current;\n  canvas.width = size > 1440 ? size / 4 : size < 800 ? size / 2 : size < 600 && size - 20;\n  canvas.height = size > 1440 ? size / 4 : size < 800 ? size / 2 : size < 600 && size - 20;\n  const totalCircles = 2000;\n  const createCircleAttempts = 500;\n  const widthX = size / 4;\n  const heightY = size / 4;\n  const maxRadius = widthX / 4;\n  const doesCircleHaveACollision = circle => {\n    for (let i = 0; i < circles.length; i++) {\n      let otherCircle = circles[i];\n      let a = circle.radius + otherCircle.radius / 4 * 1.976;\n      let x = circle.x - otherCircle.x;\n      let y = circle.y - otherCircle.y;\n      if (a >= Math.sqrt(x * x + y * y)) {\n        return true;\n      }\n    }\n    if (circle.x + circle.radius >= widthX - 15 || circle.x - circle.radius <= 0) {\n      return true;\n    }\n    if (circle.y + circle.radius >= heightY - 15 || circle.y - circle.radius <= 0) {\n      return true;\n    }\n    return false;\n  };\n  const createAndDrawCircle = () => {\n    let newCircle;\n    let circleSafeToDraw = false;\n    for (let tries = 0; tries < createCircleAttempts; tries++) {\n      newCircle = {\n        x: Math.random() * (widthX - 30) + 15,\n        y: Math.random() * (heightY - 30) + 15,\n        radius: minRadius\n      };\n      if (doesCircleHaveACollision(newCircle)) {\n        continue;\n      } else {\n        circleSafeToDraw = true;\n        break;\n      }\n    }\n    if (!circleSafeToDraw) {\n      return;\n    }\n    for (let radiusSize = minRadius; radiusSize <= maxRadius; radiusSize++) {\n      newCircle.radius = radiusSize;\n      if (doesCircleHaveACollision(newCircle)) {\n        newCircle.radius--;\n        break;\n      }\n    }\n    circles.push(newCircle);\n    p5Instance.circle(newCircle.x, newCircle.y, newCircle.radius);\n  };\n  let p5Instance = null;\n  const sketch = p => {\n    p.setup = () => {\n      p.createCanvas(widthX, heightY);\n      p.background(0);\n      p.translate(widthX / 2, heightY / 2);\n      p.fill(255);\n      p.circle(0, 0, widthX / 2);\n      p.fill(0);\n      p.textSize(45);\n      p.textAlign(p.CENTER, p.CENTER);\n      p.text('Click here', 0, 0);\n    };\n    p.draw = () => {\n      if (p.mouseIsPressed) {\n        circles = [];\n        p.background(0);\n        p.noFill();\n        p.stroke(255);\n        for (let i = 0; i < totalCircles; i++) {\n          createAndDrawCircle();\n        }\n        itter += 1;\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 10\n  }, this);\n};\n_c = Circles;\nexport default Circles;\nvar _c;\n$RefreshReg$(_c, \"Circles\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","canvasRef","Circles","_ref","size","console","log","itter","circles","minRadius","canvas","current","width","height","totalCircles","createCircleAttempts","widthX","heightY","maxRadius","doesCircleHaveACollision","circle","i","length","otherCircle","a","radius","x","y","Math","sqrt","createAndDrawCircle","newCircle","circleSafeToDraw","tries","random","radiusSize","push","p5Instance","sketch","p","setup","createCanvas","background","translate","fill","textSize","textAlign","CENTER","text","draw","mouseIsPressed","noFill","stroke","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/components/circles/Circles.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nconst canvasRef = useRef(null);\r\nconst Circles = ({ size }) => {\r\n  console.log(size);\r\n  let itter = 0;\r\n  let circles = [];\r\n  const minRadius = 5;\r\n  const canvas = canvasRef.current;\r\n  canvas.width = size > 1440 ? size / 4 : size < 800 ? size / 2 : size < 600 && size - 20;\r\n  canvas.height = size > 1440 ? size / 4 : size < 800 ? size / 2 : size < 600 && size - 20;\r\n  const totalCircles = 2000;\r\n  const createCircleAttempts = 500;\r\n  const widthX = size / 4;\r\n  const heightY = size / 4;\r\n  const maxRadius = widthX / 4;\r\n  const doesCircleHaveACollision = (circle) => {\r\n    for (let i = 0; i < circles.length; i++) {\r\n      let otherCircle = circles[i];\r\n      let a = circle.radius + (otherCircle.radius / 4) * 1.976;\r\n      let x = circle.x - otherCircle.x;\r\n      let y = circle.y - otherCircle.y;\r\n\r\n      if (a >= Math.sqrt(x * x + y * y)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (circle.x + circle.radius >= widthX - 15 || circle.x - circle.radius <= 0) {\r\n      return true;\r\n    }\r\n\r\n    if (circle.y + circle.radius >= heightY - 15 || circle.y - circle.radius <= 0) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const createAndDrawCircle = () => {\r\n    let newCircle;\r\n    let circleSafeToDraw = false;\r\n\r\n    for (let tries = 0; tries < createCircleAttempts; tries++) {\r\n      newCircle = {\r\n        x: Math.random() * (widthX - 30) + 15,\r\n        y: Math.random() * (heightY - 30) + 15,\r\n        radius: minRadius,\r\n      };\r\n\r\n      if (doesCircleHaveACollision(newCircle)) {\r\n        continue;\r\n      } else {\r\n        circleSafeToDraw = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!circleSafeToDraw) {\r\n      return;\r\n    }\r\n\r\n    for (let radiusSize = minRadius; radiusSize <= maxRadius; radiusSize++) {\r\n      newCircle.radius = radiusSize;\r\n      if (doesCircleHaveACollision(newCircle)) {\r\n        newCircle.radius--;\r\n        break;\r\n      }\r\n    }\r\n\r\n    circles.push(newCircle);\r\n    p5Instance.circle(newCircle.x, newCircle.y, newCircle.radius);\r\n  };\r\n\r\n  let p5Instance = null;\r\n\r\n  const sketch = (p) => {\r\n    p.setup = () => {\r\n      p.createCanvas(widthX, heightY);\r\n      p.background(0);\r\n      p.translate(widthX / 2, heightY / 2);\r\n      p.fill(255);\r\n      p.circle(0, 0, widthX / 2);\r\n      p.fill(0);\r\n      p.textSize(45);\r\n      p.textAlign(p.CENTER, p.CENTER);\r\n      p.text('Click here', 0, 0);\r\n    };\r\n\r\n    p.draw = () => {\r\n      if (p.mouseIsPressed) {\r\n        circles = [];\r\n        p.background(0);\r\n        p.noFill();\r\n        p.stroke(255);\r\n\r\n        for (let i = 0; i < totalCircles; i++) {\r\n          createAndDrawCircle();\r\n        }\r\n\r\n        itter += 1;\r\n      }\r\n    };\r\n  };\r\n  return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Circles;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
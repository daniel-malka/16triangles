{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CODE\\\\ART\\\\daniel\\\\16TRI\\\\github\\\\16triangles\\\\src\\\\components\\\\BackgroundColorPickerComponent\\\\BackgroundColorPickerComponent.js\",\n  _s = $RefreshSig$();\nimport { use } from 'react';\nimport { SketchPicker } from 'react-color';\nimport './BackgroundColorPickerComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundColorPickerComponent = _ref => {\n  _s();\n  let {\n    isVisible,\n    colors,\n    setColors\n  } = _ref;\n  const [isDragging, setIsDragging] = useState(false);\n  const handleMouseDown = () => {\n    setIsDragging(true);\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  const handleColorChange = color => {\n    // Check if the color picker is being dragged\n    if (isDragging) {\n      return; // Ignore color changes while dragging\n    }\n\n    const newColor = color.hex;\n\n    // Check if the new color already exists in the colors array\n    const colorExists = colors.includes(newColor);\n\n    // Check if the maximum limit of four colors is reached\n    const isColorLimitReached = colors.length >= 4;\n\n    // Add the new color to the array only if it doesn't exist and the limit is not reached\n    if (!colorExists && !isColorLimitReached) {\n      setColors([...colors, newColor]);\n    }\n  };\n  return isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n      color: colors[colors.length - 1],\n      onChange: handleColorChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n_s(BackgroundColorPickerComponent, \"VIDKbg2yfT0CLfTnlFHLO2Fjmb8=\");\n_c = BackgroundColorPickerComponent;\nexport default BackgroundColorPickerComponent;\nvar _c;\n$RefreshReg$(_c, \"BackgroundColorPickerComponent\");","map":{"version":3,"names":["use","SketchPicker","jsxDEV","_jsxDEV","BackgroundColorPickerComponent","_ref","_s","isVisible","colors","setColors","isDragging","setIsDragging","useState","handleMouseDown","handleMouseUp","handleColorChange","color","newColor","hex","colorExists","includes","isColorLimitReached","length","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/components/BackgroundColorPickerComponent/BackgroundColorPickerComponent.js"],"sourcesContent":["import {use} from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport './BackgroundColorPickerComponent.css';\r\n\r\nconst BackgroundColorPickerComponent = ({ isVisible, colors, setColors }) => {\r\n  const [isDragging, setIsDragging] = useState(false);\r\n\r\n  const handleMouseDown = () => {\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    setIsDragging(false);\r\n  };\r\n  const handleColorChange = (color) => {\r\n    // Check if the color picker is being dragged\r\n    if (isDragging) {\r\n      return; // Ignore color changes while dragging\r\n    }\r\n\r\n    const newColor = color.hex;\r\n\r\n    // Check if the new color already exists in the colors array\r\n    const colorExists = colors.includes(newColor);\r\n\r\n    // Check if the maximum limit of four colors is reached\r\n    const isColorLimitReached = colors.length >= 4;\r\n\r\n    // Add the new color to the array only if it doesn't exist and the limit is not reached\r\n    if (!colorExists && !isColorLimitReached) {\r\n      setColors([...colors, newColor]);\r\n    }\r\n  };\r\n  return (\r\n    isVisible && (\r\n      <div>\r\n        <SketchPicker color={colors[colors.length - 1]} onChange={handleColorChange} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default BackgroundColorPickerComponent;\r\n"],"mappings":";;AAAA,SAAQA,GAAG,QAAO,OAAO;AACzB,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,8BAA8B,GAAGC,IAAA,IAAsC;EAAAC,EAAA;EAAA,IAArC;IAAEC,SAAS;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EACtE,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BF,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1BH,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EACD,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IACnC;IACA,IAAIN,UAAU,EAAE;MACd,OAAO,CAAC;IACV;;IAEA,MAAMO,QAAQ,GAAGD,KAAK,CAACE,GAAG;;IAE1B;IACA,MAAMC,WAAW,GAAGX,MAAM,CAACY,QAAQ,CAACH,QAAQ,CAAC;;IAE7C;IACA,MAAMI,mBAAmB,GAAGb,MAAM,CAACc,MAAM,IAAI,CAAC;;IAE9C;IACA,IAAI,CAACH,WAAW,IAAI,CAACE,mBAAmB,EAAE;MACxCZ,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAES,QAAQ,CAAC,CAAC;IAClC;EACF,CAAC;EACD,OACEV,SAAS,iBACPJ,OAAA;IAAAoB,QAAA,eACEpB,OAAA,CAACF,YAAY;MAACe,KAAK,EAAER,MAAM,CAACA,MAAM,CAACc,MAAM,GAAG,CAAC,CAAE;MAACE,QAAQ,EAAET;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CACN;AAEL,CAAC;AAACtB,EAAA,CApCIF,8BAA8B;AAAAyB,EAAA,GAA9BzB,8BAA8B;AAsCpC,eAAeA,8BAA8B;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
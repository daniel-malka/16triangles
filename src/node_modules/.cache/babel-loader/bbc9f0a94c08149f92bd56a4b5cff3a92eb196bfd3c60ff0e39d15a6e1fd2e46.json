{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CODE\\\\ART\\\\daniel\\\\16TRI\\\\github\\\\16triangles\\\\src\\\\components\\\\BackgroundColorPickerComponent\\\\BackgroundColorPickerComponent.js\";\nimport React from 'react';\nimport { SketchPicker } from 'react-color';\nimport './BackgroundColorPickerComponent.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundColorPickerComponent = _ref => {\n  let {\n    isVisible,\n    colors,\n    setColors\n  } = _ref;\n  const handleColorChange = color => {\n    const newColor = color.hex;\n    const colorExists = colors.includes(newColor);\n    const isColorLimitReached = colors.length >= 4;\n\n    // Add the new color to the array only if it doesn't exist and the limit is not reached\n    if (!colorExists && !isColorLimitReached) {\n      setColors([...colors, newColor]);\n    }\n  };\n  return isVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n      color: colors[colors.length - 1],\n      onChange: handleColorChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n_c = BackgroundColorPickerComponent;\nexport default BackgroundColorPickerComponent;\nvar _c;\n$RefreshReg$(_c, \"BackgroundColorPickerComponent\");","map":{"version":3,"names":["React","SketchPicker","jsxDEV","_jsxDEV","BackgroundColorPickerComponent","_ref","isVisible","colors","setColors","handleColorChange","color","newColor","hex","colorExists","includes","isColorLimitReached","length","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/components/BackgroundColorPickerComponent/BackgroundColorPickerComponent.js"],"sourcesContent":["import React from 'react';\r\nimport { SketchPicker } from 'react-color';\r\nimport './BackgroundColorPickerComponent.css';\r\n\r\nconst BackgroundColorPickerComponent = ({ isVisible, colors, setColors }) => {\r\n  const handleColorChange = (color) => {\r\n    const newColor = color.hex;\r\n\r\n    const colorExists = colors.includes(newColor);\r\n\r\n    const isColorLimitReached = colors.length >= 4;\r\n\r\n    // Add the new color to the array only if it doesn't exist and the limit is not reached\r\n    if (!colorExists && !isColorLimitReached) {\r\n      setColors([...colors, newColor]);\r\n    }\r\n  };\r\n  return (\r\n    isVisible && (\r\n      <div>\r\n        <SketchPicker color={colors[colors.length - 1]} onChange={handleColorChange} />\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default BackgroundColorPickerComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,aAAa;AAC1C,OAAO,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,8BAA8B,GAAGC,IAAA,IAAsC;EAAA,IAArC;IAAEC,SAAS;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAAH,IAAA;EACtE,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IACnC,MAAMC,QAAQ,GAAGD,KAAK,CAACE,GAAG;IAE1B,MAAMC,WAAW,GAAGN,MAAM,CAACO,QAAQ,CAACH,QAAQ,CAAC;IAE7C,MAAMI,mBAAmB,GAAGR,MAAM,CAACS,MAAM,IAAI,CAAC;;IAE9C;IACA,IAAI,CAACH,WAAW,IAAI,CAACE,mBAAmB,EAAE;MACxCP,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEI,QAAQ,CAAC,CAAC;IAClC;EACF,CAAC;EACD,OACEL,SAAS,iBACPH,OAAA;IAAAc,QAAA,eACEd,OAAA,CAACF,YAAY;MAACS,KAAK,EAAEH,MAAM,CAACA,MAAM,CAACS,MAAM,GAAG,CAAC,CAAE;MAACE,QAAQ,EAAET;IAAkB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5E,CACN;AAEL,CAAC;AAACC,EAAA,GApBInB,8BAA8B;AAsBpC,eAAeA,8BAA8B;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
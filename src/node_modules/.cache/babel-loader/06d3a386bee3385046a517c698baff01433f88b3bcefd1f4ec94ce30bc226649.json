{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CODE\\\\ART\\\\daniel\\\\16TRI\\\\github\\\\16triangles\\\\src\\\\components\\\\circles\\\\Circles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Circles = _ref => {\n  _s();\n  let {\n    size\n  } = _ref;\n  const canvasRef = useRef(null);\n  let itter = 0;\n  let circles = [];\n  const minRadius = 5;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const widthX = size / 4;\n    const heightY = size / 4;\n    const maxRadius = widthX / 4;\n    const doesCircleHaveACollision = circle => {\n      // Collision detection logic\n      // ...\n\n      return false;\n    };\n    const createAndDrawCircle = (x, y, radius) => {\n      // Drawing logic\n      // ...\n    };\n    const handleMouseClick = () => {\n      // Clear canvas\n      ctx.clearRect(0, 0, widthX, heightY);\n      // Draw circles\n      for (let i = 0; i < totalCircles; i++) {\n        createAndDrawCircle();\n      }\n      itter += 1;\n    };\n    const totalCircles = 2000;\n    canvas.width = widthX;\n    canvas.height = heightY;\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, widthX, heightY);\n    ctx.fillStyle = 'white';\n    ctx.strokeStyle = 'white';\n    ctx.translate(widthX / 2, heightY / 2);\n    ctx.arc(0, 0, widthX / 2, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.fillStyle = 'black';\n    ctx.font = '45px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText('Click here', 0, 0);\n    canvas.addEventListener('click', handleMouseClick);\n    return () => {\n      canvas.removeEventListener('click', handleMouseClick);\n    };\n  }, [size]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n_s(Circles, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Circles;\nexport default Circles;\nvar _c;\n$RefreshReg$(_c, \"Circles\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Circles","_ref","_s","size","canvasRef","itter","circles","minRadius","canvas","current","ctx","getContext","widthX","heightY","maxRadius","doesCircleHaveACollision","circle","createAndDrawCircle","x","y","radius","handleMouseClick","clearRect","i","totalCircles","width","height","fillStyle","fillRect","strokeStyle","translate","arc","Math","PI","fill","font","textAlign","textBaseline","fillText","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/components/circles/Circles.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst Circles = ({ size }) => {\r\n  const canvasRef = useRef(null);\r\n  let itter = 0;\r\n  let circles = [];\r\n  const minRadius = 5;\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const widthX = size / 4;\r\n    const heightY = size / 4;\r\n    const maxRadius = widthX / 4;\r\n\r\n    const doesCircleHaveACollision = (circle) => {\r\n      // Collision detection logic\r\n      // ...\r\n\r\n      return false;\r\n    };\r\n\r\n    const createAndDrawCircle = (x, y, radius) => {\r\n      // Drawing logic\r\n      // ...\r\n    };\r\n\r\n    const handleMouseClick = () => {\r\n      // Clear canvas\r\n      ctx.clearRect(0, 0, widthX, heightY);\r\n      // Draw circles\r\n      for (let i = 0; i < totalCircles; i++) {\r\n        createAndDrawCircle();\r\n      }\r\n      itter += 1;\r\n    };\r\n\r\n    const totalCircles = 2000;\r\n\r\n    canvas.width = widthX;\r\n    canvas.height = heightY;\r\n\r\n    ctx.fillStyle = 'black';\r\n    ctx.fillRect(0, 0, widthX, heightY);\r\n    ctx.fillStyle = 'white';\r\n    ctx.strokeStyle = 'white';\r\n\r\n    ctx.translate(widthX / 2, heightY / 2);\r\n    ctx.arc(0, 0, widthX / 2, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n\r\n    ctx.fillStyle = 'black';\r\n    ctx.font = '45px Arial';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.fillText('Click here', 0, 0);\r\n\r\n    canvas.addEventListener('click', handleMouseClick);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('click', handleMouseClick);\r\n    };\r\n  }, [size]);\r\n\r\n  return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Circles;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,OAAO,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACvB,MAAMG,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAC9B,IAAIQ,KAAK,GAAG,CAAC;EACb,IAAIC,OAAO,GAAG,EAAE;EAChB,MAAMC,SAAS,GAAG,CAAC;EAEnBX,SAAS,CAAC,MAAM;IACd,MAAMY,MAAM,GAAGJ,SAAS,CAACK,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,MAAM,GAAGT,IAAI,GAAG,CAAC;IACvB,MAAMU,OAAO,GAAGV,IAAI,GAAG,CAAC;IACxB,MAAMW,SAAS,GAAGF,MAAM,GAAG,CAAC;IAE5B,MAAMG,wBAAwB,GAAIC,MAAM,IAAK;MAC3C;MACA;;MAEA,OAAO,KAAK;IACd,CAAC;IAED,MAAMC,mBAAmB,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAEC,MAAM,KAAK;MAC5C;MACA;IAAA,CACD;IAED,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC7B;MACAX,GAAG,CAACY,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEV,MAAM,EAAEC,OAAO,CAAC;MACpC;MACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,YAAY,EAAED,CAAC,EAAE,EAAE;QACrCN,mBAAmB,CAAC,CAAC;MACvB;MACAZ,KAAK,IAAI,CAAC;IACZ,CAAC;IAED,MAAMmB,YAAY,GAAG,IAAI;IAEzBhB,MAAM,CAACiB,KAAK,GAAGb,MAAM;IACrBJ,MAAM,CAACkB,MAAM,GAAGb,OAAO;IAEvBH,GAAG,CAACiB,SAAS,GAAG,OAAO;IACvBjB,GAAG,CAACkB,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAEhB,MAAM,EAAEC,OAAO,CAAC;IACnCH,GAAG,CAACiB,SAAS,GAAG,OAAO;IACvBjB,GAAG,CAACmB,WAAW,GAAG,OAAO;IAEzBnB,GAAG,CAACoB,SAAS,CAAClB,MAAM,GAAG,CAAC,EAAEC,OAAO,GAAG,CAAC,CAAC;IACtCH,GAAG,CAACqB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAEnB,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAGoB,IAAI,CAACC,EAAE,CAAC;IACzCvB,GAAG,CAACwB,IAAI,CAAC,CAAC;IAEVxB,GAAG,CAACiB,SAAS,GAAG,OAAO;IACvBjB,GAAG,CAACyB,IAAI,GAAG,YAAY;IACvBzB,GAAG,CAAC0B,SAAS,GAAG,QAAQ;IACxB1B,GAAG,CAAC2B,YAAY,GAAG,QAAQ;IAC3B3B,GAAG,CAAC4B,QAAQ,CAAC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;IAEhC9B,MAAM,CAAC+B,gBAAgB,CAAC,OAAO,EAAElB,gBAAgB,CAAC;IAElD,OAAO,MAAM;MACXb,MAAM,CAACgC,mBAAmB,CAAC,OAAO,EAAEnB,gBAAgB,CAAC;IACvD,CAAC;EACH,CAAC,EAAE,CAAClB,IAAI,CAAC,CAAC;EAEV,oBAAOJ,OAAA;IAAQ0C,GAAG,EAAErC;EAAU;IAAAsC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnC,CAAC;AAAC3C,EAAA,CA/DIF,OAAO;AAAA8C,EAAA,GAAP9C,OAAO;AAiEb,eAAeA,OAAO;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
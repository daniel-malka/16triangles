{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CODE\\\\ART\\\\daniel\\\\16TRI\\\\github\\\\16triangles\\\\src\\\\components\\\\circles\\\\Circles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport generateUniqueRandomNumbers from '../../utilities/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Circles = _ref => {\n  _s();\n  let {\n    size,\n    canvasRef,\n    isClicked,\n    bgColors,\n    strokeColor,\n    fillColor,\n    strokeWidth\n  } = _ref;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const numColors = bgColors.length;\n    function generateUniqueRandomNumbers(min, max, count) {\n      if (count > max - min + 1) {\n        throw new Error('Cannot generate unique random numbers. Count exceeds range.');\n      }\n      const numbers = [];\n      while (numbers.length < count) {\n        const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n        if (!numbers.includes(randomNumber)) {\n          numbers.push(randomNumber);\n        }\n      }\n      return numbers;\n    }\n    let numbers2 = generateUniqueRandomNumbers(0, 1, 2);\n    let numbers3 = generateUniqueRandomNumbers(0, 2, 3);\n    let numbers4 = generateUniqueRandomNumbers(0, 3, 4);\n    let coin = Math.random();\n    const minRadius = 2;\n    canvas.width = size > 1440 ? 800 : size < 800 ? size / 2 : size < 600 && size - 20;\n    canvas.height = size > 1440 ? 800 : size < 800 ? size / 2 : size < 600 && size - 20;\n    const drawCircles = () => {\n      const totalCircles = 3000;\n      let createCircleAttempts = 2000;\n      const widthX = canvas.width;\n      const circles = [];\n      if (numColors === 1) {\n        ctx.fillStyle = bgColors[0];\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n      } else if (numColors === 2) {\n        const halfWidth = canvas.width / 2;\n        const halfHeight = canvas.height / 2;\n        if (coin > 0.5) {\n          ctx.fillStyle = bgColors[numbers2[0]];\n          ctx.fillRect(0, 0, halfWidth, canvas.height);\n          ctx.fillStyle = bgColors[numbers2[1]];\n          ctx.fillRect(halfWidth, 0, halfWidth, canvas.height);\n        } else if (coin <= 0.5) {\n          ctx.fillStyle = bgColors[numbers2[0]];\n          ctx.fillRect(0, 0, canvas.width, halfHeight);\n          ctx.fillStyle = bgColors[numbers2[1]];\n          ctx.fillRect(0, halfHeight, canvas.width, halfHeight);\n        }\n      } else if (numColors === 3) {\n        const thirdWidth = canvas.width / 3;\n        if (coin > 0.666) {\n          ctx.fillStyle = bgColors[numbers3[0]];\n          ctx.fillRect(0, 0, thirdWidth, canvas.height);\n          ctx.fillStyle = bgColors[numbers3[1]];\n          ctx.fillRect(thirdWidth, 0, thirdWidth, canvas.height);\n          ctx.fillStyle = bgColors[numbers3[2]];\n          ctx.fillRect(2 * thirdWidth, 0, thirdWidth, canvas.height);\n        } else if (coin <= 0.666 && coin > 0.333) {\n          ctx.fillStyle = bgColors[numbers3[0]];\n          ctx.fillRect(0, 0, thirdWidth, canvas.height);\n          ctx.fillStyle = bgColors[numbers3[1]];\n          ctx.fillRect(thirdWidth, 0, thirdWidth, canvas.height);\n          ctx.fillStyle = bgColors[numbers3[2]];\n          ctx.fillRect(2 * thirdWidth, 0, thirdWidth, canvas.height);\n        } else if (coin <= 0.333) {\n          ctx.fillStyle = bgColors[numbers3[0]];\n          ctx.fillRect(0, 0, thirdWidth, canvas.height);\n          ctx.fillStyle = bgColors[numbers3[1]];\n          ctx.fillRect(thirdWidth, 0, thirdWidth, canvas.height);\n          ctx.fillStyle = bgColors[numbers3[2]];\n          ctx.fillRect(2 * thirdWidth, 0, thirdWidth, canvas.height);\n        }\n      } else if (numColors === 4) {\n        const quarter = widthX;\n        if (coin >= 0.75) {\n          ctx.fillStyle = bgColors[numbers4[0]];\n          ctx.fillRect(0, 0, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[1]];\n          ctx.fillRect(quarter, 0, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[2]];\n          ctx.fillRect(0, quarter, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[3]];\n          ctx.fillRect(quarter, quarter, quarter, quarter);\n        } else if (coin < 0.75 && coin >= 0.5) {\n          ctx.fillStyle = bgColors[numbers4[0]];\n          ctx.fillRect(0, 0, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[1]];\n          ctx.fillRect(quarter, 0, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[2]];\n          ctx.fillRect(0, quarter, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[3]];\n          ctx.fillRect(quarter, quarter, quarter, quarter);\n        } else if (coin < 0.5 && coin >= 0.25) {\n          ctx.fillStyle = bgColors[numbers4[0]];\n          ctx.fillRect(0, 0, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[1]];\n          ctx.fillRect(quarter, 0, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[2]];\n          ctx.fillRect(0, quarter, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[3]];\n          ctx.fillRect(quarter, quarter, quarter, quarter);\n        } else if (coin < 0.25) {\n          ctx.fillStyle = bgColors[numbers4[0]];\n          ctx.fillRect(0, 0, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[1]];\n          ctx.fillRect(quarter, 0, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[2]];\n          ctx.fillRect(0, quarter, quarter, quarter);\n          ctx.fillStyle = bgColors[numbers4[3]];\n          ctx.fillRect(quarter, quarter, quarter, quarter);\n        }\n      }\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillRect(0, 0, canvas.width, canvas.height); // Draw and fill the rectangle\n\n      ctx.lineWidth = strokeWidth; // Set the stroke width\n\n      const doesCircleHaveACollision = circle => {\n        for (let i = 0; i < circles.length; i++) {\n          const existingCircle = circles[i];\n          const dx = circle.x - existingCircle.x;\n          const dy = circle.y - existingCircle.y;\n          const distance = Math.sqrt(dx * dx + dy * dy);\n          if (distance <= circle.radius + existingCircle.radius) {\n            return true;\n          }\n        }\n        return false;\n      };\n      const createCircle = () => {\n        const x = Math.random() * widthX;\n        const y = Math.random() * widthX;\n        const radius = minRadius + Math.random() * (widthX - minRadius);\n        const newCircle = {\n          x,\n          y,\n          radius\n        };\n        if (doesCircleHaveACollision(newCircle)) {\n          if (createCircleAttempts > 0) {\n            createCircleAttempts--;\n            createCircle();\n          }\n          return;\n        }\n        circles.push(newCircle);\n      };\n      for (let i = 0; i < totalCircles; i++) {\n        createCircle();\n      }\n      circles.forEach(circle => {\n        ctx.beginPath();\n        ctx.arc(circle.x, circle.y, circle.radius, 0, 2 * Math.PI);\n        ctx.strokeStyle = strokeColor;\n        ctx.fillStyle = 'none';\n        ctx.stroke();\n      });\n    };\n    drawCircles();\n  }, [isClicked]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 10\n  }, this);\n};\n_s(Circles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Circles;\nexport default Circles;\nvar _c;\n$RefreshReg$(_c, \"Circles\");","map":{"version":3,"names":["React","useEffect","generateUniqueRandomNumbers","jsxDEV","_jsxDEV","Circles","_ref","_s","size","canvasRef","isClicked","bgColors","strokeColor","fillColor","strokeWidth","canvas","current","ctx","getContext","numColors","length","min","max","count","Error","numbers","randomNumber","Math","floor","random","includes","push","numbers2","numbers3","numbers4","coin","minRadius","width","height","drawCircles","totalCircles","createCircleAttempts","widthX","circles","fillStyle","fillRect","halfWidth","halfHeight","thirdWidth","quarter","clearRect","lineWidth","doesCircleHaveACollision","circle","i","existingCircle","dx","x","dy","y","distance","sqrt","radius","createCircle","newCircle","forEach","beginPath","arc","PI","strokeStyle","stroke","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/components/circles/Circles.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport generateUniqueRandomNumbers from '../../utilities/'\r\nconst Circles = ({ size, canvasRef, isClicked, bgColors, strokeColor, fillColor, strokeWidth }) => {\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const numColors = bgColors.length;\r\n    function generateUniqueRandomNumbers(min, max, count) {\r\n      if (count > max - min + 1) {\r\n        throw new Error('Cannot generate unique random numbers. Count exceeds range.');\r\n      }\r\n\r\n      const numbers = [];\r\n\r\n      while (numbers.length < count) {\r\n        const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n        if (!numbers.includes(randomNumber)) {\r\n          numbers.push(randomNumber);\r\n        }\r\n      }\r\n\r\n      return numbers;\r\n    }\r\n    let numbers2 = generateUniqueRandomNumbers(0, 1, 2);\r\n    let numbers3 = generateUniqueRandomNumbers(0, 2, 3);\r\n    let numbers4 = generateUniqueRandomNumbers(0, 3, 4);\r\n    let coin = Math.random();\r\n    const minRadius = 2;\r\n    canvas.width = size > 1440 ? 800 : size < 800 ? size / 2 : size < 600 && size - 20;\r\n    canvas.height = size > 1440 ? 800 : size < 800 ? size / 2 : size < 600 && size - 20;\r\n\r\n    const drawCircles = () => {\r\n      const totalCircles = 3000;\r\n      let createCircleAttempts = 2000;\r\n\r\n      const widthX = canvas.width;\r\n\r\n      const circles = [];\r\n\r\n      if (numColors === 1) {\r\n        ctx.fillStyle = bgColors[0];\r\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      } else if (numColors === 2) {\r\n        const halfWidth = canvas.width / 2;\r\n        const halfHeight = canvas.height / 2;\r\n        if (coin > 0.5) {\r\n          ctx.fillStyle = bgColors[numbers2[0]];\r\n          ctx.fillRect(0, 0, halfWidth, canvas.height);\r\n          ctx.fillStyle = bgColors[numbers2[1]];\r\n          ctx.fillRect(halfWidth, 0, halfWidth, canvas.height);\r\n        } else if (coin <= 0.5) {\r\n          ctx.fillStyle = bgColors[numbers2[0]];\r\n          ctx.fillRect(0, 0, canvas.width, halfHeight);\r\n          ctx.fillStyle = bgColors[numbers2[1]];\r\n          ctx.fillRect(0, halfHeight, canvas.width, halfHeight);\r\n        }\r\n      } else if (numColors === 3) {\r\n        const thirdWidth = canvas.width / 3;\r\n        if (coin > 0.666) {\r\n          ctx.fillStyle = bgColors[numbers3[0]];\r\n          ctx.fillRect(0, 0, thirdWidth, canvas.height);\r\n          ctx.fillStyle = bgColors[numbers3[1]];\r\n          ctx.fillRect(thirdWidth, 0, thirdWidth, canvas.height);\r\n          ctx.fillStyle = bgColors[numbers3[2]];\r\n          ctx.fillRect(2 * thirdWidth, 0, thirdWidth, canvas.height);\r\n        } else if (coin <= 0.666 && coin > 0.333) {\r\n          ctx.fillStyle = bgColors[numbers3[0]];\r\n          ctx.fillRect(0, 0, thirdWidth, canvas.height);\r\n          ctx.fillStyle = bgColors[numbers3[1]];\r\n          ctx.fillRect(thirdWidth, 0, thirdWidth, canvas.height);\r\n          ctx.fillStyle = bgColors[numbers3[2]];\r\n          ctx.fillRect(2 * thirdWidth, 0, thirdWidth, canvas.height);\r\n        } else if (coin <= 0.333) {\r\n          ctx.fillStyle = bgColors[numbers3[0]];\r\n          ctx.fillRect(0, 0, thirdWidth, canvas.height);\r\n          ctx.fillStyle = bgColors[numbers3[1]];\r\n          ctx.fillRect(thirdWidth, 0, thirdWidth, canvas.height);\r\n          ctx.fillStyle = bgColors[numbers3[2]];\r\n          ctx.fillRect(2 * thirdWidth, 0, thirdWidth, canvas.height);\r\n        }\r\n      } else if (numColors === 4) {\r\n        const quarter = widthX;\r\n        if (coin >= 0.75) {\r\n          ctx.fillStyle = bgColors[numbers4[0]];\r\n          ctx.fillRect(0, 0, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[1]];\r\n          ctx.fillRect(quarter, 0, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[2]];\r\n          ctx.fillRect(0, quarter, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[3]];\r\n          ctx.fillRect(quarter, quarter, quarter, quarter);\r\n        } else if (coin < 0.75 && coin >= 0.5) {\r\n          ctx.fillStyle = bgColors[numbers4[0]];\r\n          ctx.fillRect(0, 0, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[1]];\r\n          ctx.fillRect(quarter, 0, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[2]];\r\n          ctx.fillRect(0, quarter, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[3]];\r\n          ctx.fillRect(quarter, quarter, quarter, quarter);\r\n        } else if (coin < 0.5 && coin >= 0.25) {\r\n          ctx.fillStyle = bgColors[numbers4[0]];\r\n          ctx.fillRect(0, 0, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[1]];\r\n          ctx.fillRect(quarter, 0, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[2]];\r\n          ctx.fillRect(0, quarter, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[3]];\r\n          ctx.fillRect(quarter, quarter, quarter, quarter);\r\n        } else if (coin < 0.25) {\r\n          ctx.fillStyle = bgColors[numbers4[0]];\r\n          ctx.fillRect(0, 0, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[1]];\r\n          ctx.fillRect(quarter, 0, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[2]];\r\n          ctx.fillRect(0, quarter, quarter, quarter);\r\n          ctx.fillStyle = bgColors[numbers4[3]];\r\n          ctx.fillRect(quarter, quarter, quarter, quarter);\r\n        }\r\n      }\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height); // Draw and fill the rectangle\r\n\r\n      ctx.lineWidth = strokeWidth; // Set the stroke width\r\n\r\n      const doesCircleHaveACollision = (circle) => {\r\n        for (let i = 0; i < circles.length; i++) {\r\n          const existingCircle = circles[i];\r\n          const dx = circle.x - existingCircle.x;\r\n          const dy = circle.y - existingCircle.y;\r\n          const distance = Math.sqrt(dx * dx + dy * dy);\r\n          if (distance <= circle.radius + existingCircle.radius) {\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n\r\n      const createCircle = () => {\r\n        const x = Math.random() * widthX;\r\n        const y = Math.random() * widthX;\r\n        const radius = minRadius + Math.random() * (widthX - minRadius);\r\n\r\n        const newCircle = { x, y, radius };\r\n\r\n        if (doesCircleHaveACollision(newCircle)) {\r\n          if (createCircleAttempts > 0) {\r\n            createCircleAttempts--;\r\n            createCircle();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        circles.push(newCircle);\r\n      };\r\n\r\n      for (let i = 0; i < totalCircles; i++) {\r\n        createCircle();\r\n      }\r\n\r\n      circles.forEach((circle) => {\r\n        ctx.beginPath();\r\n        ctx.arc(circle.x, circle.y, circle.radius, 0, 2 * Math.PI);\r\n        ctx.strokeStyle = strokeColor;\r\n        ctx.fillStyle = 'none';\r\n        ctx.stroke();\r\n      });\r\n    };\r\n\r\n    drawCircles();\r\n  }, [isClicked]);\r\n\r\n  return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Circles;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CODE\\\\ART\\\\daniel\\\\16TRI\\\\github\\\\16triangles\\\\src\\\\components\\\\TriangleColorPickerComponent\\\\TriangleColorPickerComponent.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TriangleColorPickerComponent = _ref => {\n  let {\n    isVisible,\n    strokeColor,\n    setStrokeColor\n  } = _ref;\n  const handleColorChange = (color, index) => {\n    const updatedColors = [...strokeColor];\n    updatedColors[index] = color.hex;\n    setStrokeColor(updatedColors);\n  };\n  return isVisible && Array.isArray(strokeColor) && /*#__PURE__*/_jsxDEV(\"div\", {\n    children: strokeColor.map((color, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SketchPicker, {\n        color: color,\n        onChange: newColor => handleColorChange(newColor, index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n_c = TriangleColorPickerComponent;\nvar _c;\n$RefreshReg$(_c, \"TriangleColorPickerComponent\");","map":{"version":3,"names":["TriangleColorPickerComponent","_ref","isVisible","strokeColor","setStrokeColor","handleColorChange","color","index","updatedColors","hex","Array","isArray","_jsxDEV","children","map","SketchPicker","onChange","newColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/components/TriangleColorPickerComponent/TriangleColorPickerComponent.js"],"sourcesContent":["const TriangleColorPickerComponent = ({ isVisible, strokeColor, setStrokeColor }) => {\r\n  const handleColorChange = (color, index) => {\r\n    const updatedColors = [...strokeColor];\r\n    updatedColors[index] = color.hex;\r\n    setStrokeColor(updatedColors);\r\n  };\r\n\r\n  return (\r\n    isVisible &&\r\n    Array.isArray(strokeColor) && (\r\n      <div>\r\n        {strokeColor.map((color, index) => (\r\n          <div key={index}>\r\n            <SketchPicker color={color} onChange={(newColor) => handleColorChange(newColor, index)} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n"],"mappings":";;AAAA,MAAMA,4BAA4B,GAAGC,IAAA,IAAgD;EAAA,IAA/C;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAe,CAAC,GAAAH,IAAA;EAC9E,MAAMI,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C,MAAMC,aAAa,GAAG,CAAC,GAAGL,WAAW,CAAC;IACtCK,aAAa,CAACD,KAAK,CAAC,GAAGD,KAAK,CAACG,GAAG;IAChCL,cAAc,CAACI,aAAa,CAAC;EAC/B,CAAC;EAED,OACEN,SAAS,IACTQ,KAAK,CAACC,OAAO,CAACR,WAAW,CAAC,iBACxBS,OAAA;IAAAC,QAAA,EACGV,WAAW,CAACW,GAAG,CAAC,CAACR,KAAK,EAAEC,KAAK,kBAC5BK,OAAA;MAAAC,QAAA,eACED,OAAA,CAACG,YAAY;QAACT,KAAK,EAAEA,KAAM;QAACU,QAAQ,EAAGC,QAAQ,IAAKZ,iBAAiB,CAACY,QAAQ,EAAEV,KAAK;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,GADlFd,KAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CACN;AAEL,CAAC;AAACC,EAAA,GAnBItB,4BAA4B;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
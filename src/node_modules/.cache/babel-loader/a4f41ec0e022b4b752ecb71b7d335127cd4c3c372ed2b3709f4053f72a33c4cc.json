{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CODE\\\\ART\\\\daniel\\\\16TRI\\\\github\\\\16triangles\\\\src\\\\components\\\\circles\\\\Circles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Circles = _ref => {\n  _s();\n  let {\n    size\n  } = _ref;\n  const canvasRef = useRef(null);\n  let itter = 0;\n  let circles = [];\n  const minRadius = 5;\n  const createCircleAttempts = 500;\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const widthX = size / 3;\n    const heightY = size / 3;\n    const maxRadius = widthX / 4;\n    const doesCircleHaveACollision = circle => {\n      for (let i = 0; i < circles.length; i++) {\n        let otherCircle = circles[i];\n        let a = circle.radius + otherCircle.radius / 4 * 1.976;\n        let x = circle.x - otherCircle.x;\n        let y = circle.y - otherCircle.y;\n        if (a >= Math.sqrt(x * x + y * y)) {\n          return true;\n        }\n      }\n      if (circle.x + circle.radius >= widthX - 15 || circle.x - circle.radius <= 0) {\n        return true;\n      }\n      if (circle.y + circle.radius >= heightY - 15 || circle.y - circle.radius <= 0) {\n        return true;\n      }\n      return false;\n    };\n    const createAndDrawCircle = () => {\n      let newCircle;\n      let circleSafeToDraw = false;\n      for (let tries = 0; tries < createCircleAttempts; tries++) {\n        newCircle = {\n          x: Math.random() * (widthX - 30) + 15,\n          y: Math.random() * (heightY - 30) + 15,\n          radius: minRadius\n        };\n        if (doesCircleHaveACollision(newCircle)) {\n          continue;\n        } else {\n          circleSafeToDraw = true;\n          break;\n        }\n      }\n      if (!circleSafeToDraw) {\n        return;\n      }\n      for (let radiusSize = minRadius; radiusSize <= maxRadius; radiusSize++) {\n        newCircle.radius = radiusSize;\n        if (doesCircleHaveACollision(newCircle)) {\n          newCircle.radius--;\n          break;\n        }\n      }\n      circles.push(newCircle);\n      ctx.beginPath();\n      ctx.arc(newCircle.x, newCircle.y, newCircle.radius, 0, 2 * Math.PI);\n      ctx.fill();\n    };\n    const handleMouseClick = () => {\n      ctx.clearRect(0, 0, widthX, heightY);\n      circles = [];\n      for (let i = 0; i < totalCircles; i++) {\n        createAndDrawCircle();\n      }\n      itter += 1;\n    };\n    const totalCircles = 2000;\n    canvas.width = widthX;\n    canvas.height = heightY;\n    ctx.fillStyle = 'black';\n    ctx.fillRect(0, 0, widthX, heightY);\n    ctx.fillStyle = 'white';\n    ctx.strokeStyle = 'white';\n    ctx.translate(widthX / 2, heightY / 2);\n    ctx.arc(0, 0, widthX / 2, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.fillStyle = 'black';\n    ctx.font = '45px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText('Click here', 0, 0);\n    canvas.addEventListener('click', handleMouseClick);\n    return () => {\n      canvas.removeEventListener('click', handleMouseClick);\n    };\n  }, [size]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 10\n  }, this);\n};\n_s(Circles, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Circles;\nexport default Circles;\nvar _c;\n$RefreshReg$(_c, \"Circles\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Circles","_ref","_s","size","canvasRef","itter","circles","minRadius","createCircleAttempts","canvas","current","ctx","getContext","widthX","heightY","maxRadius","doesCircleHaveACollision","circle","i","length","otherCircle","a","radius","x","y","Math","sqrt","createAndDrawCircle","newCircle","circleSafeToDraw","tries","random","radiusSize","push","beginPath","arc","PI","fill","handleMouseClick","clearRect","totalCircles","width","height","fillStyle","fillRect","strokeStyle","translate","font","textAlign","textBaseline","fillText","addEventListener","removeEventListener","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/components/circles/Circles.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst Circles = ({ size }) => {\r\n  const canvasRef = useRef(null);\r\n  let itter = 0;\r\n  let circles = [];\r\n  const minRadius = 5;\r\n  const createCircleAttempts = 500;\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const widthX = size / 3;\r\n    const heightY = size / 3;\r\n    const maxRadius = widthX / 4;\r\n\r\n    const doesCircleHaveACollision = (circle) => {\r\n      for (let i = 0; i < circles.length; i++) {\r\n        let otherCircle = circles[i];\r\n        let a = circle.radius + (otherCircle.radius / 4) * 1.976;\r\n        let x = circle.x - otherCircle.x;\r\n        let y = circle.y - otherCircle.y;\r\n\r\n        if (a >= Math.sqrt(x * x + y * y)) {\r\n          return true;\r\n        }\r\n      }\r\n\r\n      if (circle.x + circle.radius >= widthX - 15 || circle.x - circle.radius <= 0) {\r\n        return true;\r\n      }\r\n\r\n      if (circle.y + circle.radius >= heightY - 15 || circle.y - circle.radius <= 0) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    };\r\n\r\n    const createAndDrawCircle = () => {\r\n      let newCircle;\r\n      let circleSafeToDraw = false;\r\n\r\n      for (let tries = 0; tries < createCircleAttempts; tries++) {\r\n        newCircle = {\r\n          x: Math.random() * (widthX - 30) + 15,\r\n          y: Math.random() * (heightY - 30) + 15,\r\n          radius: minRadius,\r\n        };\r\n\r\n        if (doesCircleHaveACollision(newCircle)) {\r\n          continue;\r\n        } else {\r\n          circleSafeToDraw = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!circleSafeToDraw) {\r\n        return;\r\n      }\r\n\r\n      for (let radiusSize = minRadius; radiusSize <= maxRadius; radiusSize++) {\r\n        newCircle.radius = radiusSize;\r\n        if (doesCircleHaveACollision(newCircle)) {\r\n          newCircle.radius--;\r\n          break;\r\n        }\r\n      }\r\n\r\n      circles.push(newCircle);\r\n      ctx.beginPath();\r\n      ctx.arc(newCircle.x, newCircle.y, newCircle.radius, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    };\r\n\r\n    const handleMouseClick = () => {\r\n      ctx.clearRect(0, 0, widthX, heightY);\r\n      circles = [];\r\n\r\n      for (let i = 0; i < totalCircles; i++) {\r\n        createAndDrawCircle();\r\n      }\r\n      itter += 1;\r\n    };\r\n\r\n    const totalCircles = 2000;\r\n\r\n    canvas.width = widthX;\r\n    canvas.height = heightY;\r\n\r\n    ctx.fillStyle = 'black';\r\n    ctx.fillRect(0, 0, widthX, heightY);\r\n    ctx.fillStyle = 'white';\r\n    ctx.strokeStyle = 'white';\r\n\r\n    ctx.translate(widthX / 2, heightY / 2);\r\n    ctx.arc(0, 0, widthX / 2, 0, 2 * Math.PI);\r\n    ctx.fill();\r\n\r\n    ctx.fillStyle = 'black';\r\n    ctx.font = '45px Arial';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    ctx.fillText('Click here', 0, 0);\r\n\r\n    canvas.addEventListener('click', handleMouseClick);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('click', handleMouseClick);\r\n    };\r\n  }, [size]);\r\n\r\n  return <canvas ref={canvasRef} />;\r\n};\r\n\r\nexport default Circles;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
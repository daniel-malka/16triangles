{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\CODE\\\\ART\\\\daniel\\\\16TRI\\\\github\\\\16triangles\\\\src\\\\components\\\\circles\\\\Circles.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport p5 from 'p5';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Circles = () => {\n  _s();\n  const sketchRef = useRef(null);\n  useEffect(() => {\n    const sketch = p => {\n      let itter = 0;\n      let circles = [];\n      let minRadius = 5;\n      let maxRadius = 300;\n      let totalCircles = 2000;\n      let createCircleAttempts = 500;\n      let widthX = 500;\n      let heightY = 500;\n      p.setup = () => {\n        p.createCanvas(widthX, heightY);\n        p.background(0);\n        p.translate(widthX / 2, heightY / 2);\n        p.fill(255);\n        p.circle(0, 0, widthX / 2);\n        p.fill(0);\n        p.textSize(45);\n        p.textAlign(p.CENTER, p.CENTER);\n        p.text('Click here', 0, 0);\n      };\n      p.draw = () => {\n        if (p.mouseIsPressed) {\n          circles = [];\n          p.background(0);\n          p.noFill();\n          p.stroke(255);\n          for (let i = 0; i < totalCircles; i++) {\n            createAndDrawCircle();\n          }\n          itter += 1;\n        }\n      };\n      function createAndDrawCircle() {\n        let newCircle;\n        let circleSafeToDraw = false;\n        for (let tries = 0; tries < createCircleAttempts; tries++) {\n          newCircle = {\n            x: p.random(15, widthX - 15),\n            y: p.random(15, heightY - 15),\n            radius: minRadius\n          };\n          function doesCircleHaveACollision(circle) {\n            for (let i = 0; i < circles.length; i++) {\n              let otherCircle = circles[i];\n              let a = circle.radius + otherCircle.radius / 4 * 1.976;\n              let x = circle.x - otherCircle.x;\n              let y = circle.y - otherCircle.y;\n              if (a >= Math.sqrt(x * x + y * y)) {\n                return true;\n              }\n            }\n            if (circle.x + circle.radius >= widthX - 15 || circle.x - circle.radius <= 0) {\n              return true;\n            }\n            if (circle.y + circle.radius >= heightY - 15 || circle.y - circle.radius <= 0) {\n              return true;\n            }\n            return false;\n          }\n          if (doesCircleHaveACollision(newCircle)) {\n            continue;\n          } else {\n            circleSafeToDraw = true;\n            break;\n          }\n        }\n        if (!circleSafeToDraw) {\n          return;\n        }\n        for (let radiusSize = minRadius; radiusSize <= maxRadius; radiusSize++) {\n          newCircle.radius = radiusSize;\n          if (doesCircleHaveACollision(newCircle)) {\n            newCircle.radius--;\n            break;\n          }\n        }\n        for (let radiusSize = minRadius; radiusSize < maxRadius; radiusSize++) {\n          newCircle.radius = radiusSize;\n          if (doesCircleHaveACollision(newCircle)) {\n            newCircle.radius--;\n            break;\n          }\n        }\n        circles.push(newCircle);\n        p.circle(newCircle.x, newCircle.y, newCircle.radius);\n      }\n    };\n    const sketchInstance = new p5(sketch, sketchRef.current);\n    return () => {\n      sketchInstance.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sketchRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 10\n  }, this);\n};\n_s(Circles, \"ex7hYNA9F+LvZx2wOxRGRjxYHos=\");\n_c = Circles;\nexport default Circles;\nvar _c;\n$RefreshReg$(_c, \"Circles\");","map":{"version":3,"names":["React","useEffect","useRef","p5","jsxDEV","_jsxDEV","Circles","_s","sketchRef","sketch","p","itter","circles","minRadius","maxRadius","totalCircles","createCircleAttempts","widthX","heightY","setup","createCanvas","background","translate","fill","circle","textSize","textAlign","CENTER","text","draw","mouseIsPressed","noFill","stroke","i","createAndDrawCircle","newCircle","circleSafeToDraw","tries","x","random","y","radius","doesCircleHaveACollision","length","otherCircle","a","Math","sqrt","radiusSize","push","sketchInstance","current","remove","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/components/circles/Circles.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport p5 from 'p5';\r\n\r\nconst Circles = () => {\r\n  const sketchRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const sketch = (p) => {\r\n      let itter = 0;\r\n      let circles = [];\r\n      let minRadius = 5;\r\n      let maxRadius = 300;\r\n      let totalCircles = 2000;\r\n      let createCircleAttempts = 500;\r\n      let widthX = 500;\r\n      let heightY = 500;\r\n\r\n      p.setup = () => {\r\n        p.createCanvas(widthX, heightY);\r\n        p.background(0);\r\n        p.translate(widthX / 2, heightY / 2);\r\n        p.fill(255);\r\n        p.circle(0, 0, widthX / 2);\r\n        p.fill(0);\r\n        p.textSize(45);\r\n        p.textAlign(p.CENTER, p.CENTER);\r\n        p.text('Click here', 0, 0);\r\n      };\r\n\r\n      p.draw = () => {\r\n        if (p.mouseIsPressed) {\r\n          circles = [];\r\n          p.background(0);\r\n          p.noFill();\r\n          p.stroke(255);\r\n\r\n          for (let i = 0; i < totalCircles; i++) {\r\n            createAndDrawCircle();\r\n          }\r\n\r\n          itter += 1;\r\n        }\r\n      };\r\n\r\n      function createAndDrawCircle() {\r\n        let newCircle;\r\n        let circleSafeToDraw = false;\r\n\r\n        for (let tries = 0; tries < createCircleAttempts; tries++) {\r\n          newCircle = {\r\n            x: p.random(15, widthX - 15),\r\n            y: p.random(15, heightY - 15),\r\n            radius: minRadius,\r\n          };\r\n\r\n          function doesCircleHaveACollision(circle) {\r\n            for (let i = 0; i < circles.length; i++) {\r\n              let otherCircle = circles[i];\r\n              let a = circle.radius + (otherCircle.radius / 4) * 1.976;\r\n              let x = circle.x - otherCircle.x;\r\n              let y = circle.y - otherCircle.y;\r\n\r\n              if (a >= Math.sqrt(x * x + y * y)) {\r\n                return true;\r\n              }\r\n            }\r\n\r\n            if (circle.x + circle.radius >= widthX - 15 || circle.x - circle.radius <= 0) {\r\n              return true;\r\n            }\r\n\r\n            if (circle.y + circle.radius >= heightY - 15 || circle.y - circle.radius <= 0) {\r\n              return true;\r\n            }\r\n\r\n            return false;\r\n          }\r\n\r\n          if (doesCircleHaveACollision(newCircle)) {\r\n            continue;\r\n          } else {\r\n            circleSafeToDraw = true;\r\n            break;\r\n          }\r\n        }\r\n\r\n        if (!circleSafeToDraw) {\r\n          return;\r\n        }\r\n\r\n        for (let radiusSize = minRadius; radiusSize <= maxRadius; radiusSize++) {\r\n          newCircle.radius = radiusSize;\r\n          if (doesCircleHaveACollision(newCircle)) {\r\n            newCircle.radius--;\r\n            break;\r\n          }\r\n        }\r\n\r\n        for (let radiusSize = minRadius; radiusSize < maxRadius; radiusSize++) {\r\n          newCircle.radius = radiusSize;\r\n          if (doesCircleHaveACollision(newCircle)) {\r\n            newCircle.radius--;\r\n            break;\r\n          }\r\n        }\r\n\r\n        circles.push(newCircle);\r\n        p.circle(newCircle.x, newCircle.y, newCircle.radius);\r\n      }\r\n    };\r\n\r\n    const sketchInstance = new p5(sketch, sketchRef.current);\r\n\r\n    return () => {\r\n      sketchInstance.remove();\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={sketchRef}></div>;\r\n};\r\n\r\nexport default Circles;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
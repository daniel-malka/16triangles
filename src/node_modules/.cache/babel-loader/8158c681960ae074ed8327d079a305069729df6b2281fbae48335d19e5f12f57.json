{"ast":null,"code":"function generateUniqueRandomNumbers(min, max, count) {\n  if (count > max - min + 1) {\n    throw new Error('Cannot generate unique random numbers. Count exceeds range.');\n  }\n  const numbers = [];\n  while (numbers.length < count) {\n    const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\n    if (!numbers.includes(randomNumber)) {\n      numbers.push(randomNumber);\n    }\n  }\n  return numbers;\n}\nexport default generateUniqueRandomNumbers;","map":{"version":3,"names":["generateUniqueRandomNumbers","min","max","count","Error","numbers","length","randomNumber","Math","floor","random","includes","push"],"sources":["C:/Users/user/Desktop/CODE/ART/daniel/16TRI/github/16triangles/src/utilities/functions.js"],"sourcesContent":["function generateUniqueRandomNumbers(min, max, count) {\r\n  if (count > max - min + 1) {\r\n    throw new Error('Cannot generate unique random numbers. Count exceeds range.');\r\n  }\r\n\r\n  const numbers = [];\r\n\r\n  while (numbers.length < count) {\r\n    const randomNumber = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\n    if (!numbers.includes(randomNumber)) {\r\n      numbers.push(randomNumber);\r\n    }\r\n  }\r\n\r\n  return numbers;\r\n}\r\nexport default generateUniqueRandomNumbers;\r\n"],"mappings":"AAAA,SAASA,2BAA2BA,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAE;EACpD,IAAIA,KAAK,GAAGD,GAAG,GAAGD,GAAG,GAAG,CAAC,EAAE;IACzB,MAAM,IAAIG,KAAK,CAAC,6DAA6D,CAAC;EAChF;EAEA,MAAMC,OAAO,GAAG,EAAE;EAElB,OAAOA,OAAO,CAACC,MAAM,GAAGH,KAAK,EAAE;IAC7B,MAAMI,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIR,GAAG,GAAGD,GAAG,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG;IAEtE,IAAI,CAACI,OAAO,CAACM,QAAQ,CAACJ,YAAY,CAAC,EAAE;MACnCF,OAAO,CAACO,IAAI,CAACL,YAAY,CAAC;IAC5B;EACF;EAEA,OAAOF,OAAO;AAChB;AACA,eAAeL,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}